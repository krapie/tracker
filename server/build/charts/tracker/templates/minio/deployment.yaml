{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: {{ .Values.minio.namespace }}
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/component: storage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: storage
    spec:
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - minio server --console-address ":9001" --address ":9000" /data
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.auth.rootUser | quote }}
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password
          ports:
            - name: minio-api
              containerPort: 9000
            - name: minio-console
              containerPort: 9001
          volumeMounts:
            - name: minio-data
              mountPath: /data
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: minio-data
          {{- if .Values.minio.persistence.enabled }}
          persistentVolumeClaim:
            claimName: minio-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}
