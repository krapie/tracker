{{- if .Values.minio.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-init
  namespace: {{ .Values.minio.namespace }}
  labels:
    app.kubernetes.io/name: minio-init
    app.kubernetes.io/component: storage-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio-init
        app.kubernetes.io/component: storage-init
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-minio
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for MinIO to be ready..."
              until nc -z minio 9000; do
                echo "MinIO not ready, waiting..."
                sleep 2
              done
              echo "MinIO is ready!"
      containers:
        - name: minio-mc
          image: minio/mc:latest
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.auth.rootUser | quote }}
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password
          command:
            - /bin/sh
            - -c
            - |
              echo "Setting up MinIO alias..."
              mc alias set tracker http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api S3v4
              echo "Creating bucket: {{ .Values.tracker.env.minioBucket }}"
              mc mb tracker/{{ .Values.tracker.env.minioBucket }} --ignore-existing
              echo "Setting bucket policy to public read for uploads (if needed)"
              # mc anonymous set public tracker/{{ .Values.tracker.env.minioBucket }}
              echo "MinIO initialization complete!"
{{- end }}
